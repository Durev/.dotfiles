" Vimrc

syntax on

" ======= Mappings =======
" Leader key
let mapleader = "\<Space>"

" Always jump to first non blank character
nmap 0 ^

" Write the file with Ctrl-s
nmap <C-s> :w<cr>
imap <C-s> <esc>:w<cr>

" Move up and down by visible lines if current line is wrapped 
nmap j gj
nmap k gk

" Rapid editing of vimrc
nmap <leader>vr :sp $MYVIMRC<cr>
nmap <leader>so :source $MYVIMRC<cr>

" Ain't nobody got time for Esc
imap jk <esc>
imap kj <esc>

" ======= Options =======
set number
set nocompatible
set backspace=indent,eol,start " allow backspacing over everything in insert mode
set ruler                      " show the cursor position all the time
set splitbelow                 " Open new split panes to bottom
set splitright                 " Open new split panes to right
" set directory=~/.tmp           " Don't clutter dirs up with swp and tmp files

" Display extra whitespace
set list listchars=tab:»·,trail:·,nbsp:·

" ======= Plugins =======
" Auto-install vim-plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" plugins
call plug#begin('~/.vim/plugged')
Plug 'ctrlpvim/ctrlp.vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'thoughtbot/vim-rspec'
Plug 'tpope/vim-dispatch'
Plug 'nanotech/jellybeans.vim'
call plug#end()

" Make CtrlP use ag for listing the files. Way faster and no useless files.
let g:ctrlp_user_command = 'ag %s -l --hidden --nocolor -g ""'
let g:ctrlp_use_caching = 0

" RSpec.vim - save and run specs
map <Leader>t :w<cr> :call RunCurrentSpecFile()<cr>
map <Leader>s :w<cr> :call RunNearestSpec()<cr>
map <Leader>l :w<cr> :call RunLastSpec()<cr>

let g:rspec_runner = "os_x_iterm2"
let g:rspec_command = "Dispatch rspec {spec}"

" Color scheme - To improve
if (has('termguicolors'))
  set termguicolors
endif

let g:jellybeans_overrides = {
\    'background': { 'ctermbg': 'none', '256ctermbg': 'none' },
\}
if has('termguicolors') && &termguicolors
    let g:jellybeans_overrides['background']['guibg'] = 'none'
endif

colorscheme jellybeans

